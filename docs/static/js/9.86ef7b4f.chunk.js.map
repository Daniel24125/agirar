{"version":3,"sources":["Domain/UseCases.jsx","Components/Loading.jsx","Components/ErrorMessage.jsx","Pages/JoinUs/JoinUs.jsx"],"names":["useGetCards","agirar","Container","get","AgirarRepository","useQuery","queryKey","queryFn","a","getMainCards","items","config","refetchOnWindowFocus","refetchInterval","refetchIntervalInBackground","onSuccess","res","forEach","value","id","queryCache","setQueryData","useGetSliderInfo","getSliderCards","useGetHistory","getHistory","useGetAteliers","getAteliers","useGetOrgaosSociais","getOrgaosSociais","useSubmitAssociate","data","submitAssociateData","response","console","log","Loading","className","size","color","ErrorMessage","props","Alert","variant","severity","AlertTitle","title","msg","FormValidated","submitStatus","status","React","useMemo","error","Typography","Button","to","JoinUs","useState","sendData","codPostal","contribuicao","dataNascimento","email","freqPagamento","localidade","modoPagamento","morada","nib","nif","nome","telefone","validated","formData","setFormData","handleTextChange","e","tempData","target","handleSelectChange","name","Paper","elevation","onSubmit","preventDefault","TextField","fullWidth","label","onChange","type","InputLabelProps","shrink","inputProps","min","helperText","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","onClick","temp_error","hasError","Object","keys","map","checkContribuicao"],"mappings":"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","file":"static/js/9.86ef7b4f.chunk.js","sourcesContent":["import { useQuery, queryCache} from 'react-query'\r\nimport { Container } from 'typedi'\r\nimport AgirarRepository from \"../Services/AgirarRepository\"\r\n\r\nexport const useGetCards = ()=>{\r\n    const agirar = Container.get(AgirarRepository)\r\n    return useQuery({\r\n        queryKey: ['main_cards'],\r\n        queryFn: async () => {\r\n            const items = await agirar.getMainCards()\r\n            return (items)\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          onSuccess: (res => {\r\n            res.forEach((value, id) => {\r\n                queryCache.setQueryData(['mainCards', id], value)\r\n              })\r\n          }),\r\n        }\r\n      })\r\n}\r\n\r\nexport const useGetSliderInfo = ()=>{\r\n    const agirar = Container.get(AgirarRepository)\r\n    return useQuery({\r\n        queryKey: ['slider_cards'],\r\n        queryFn: async () => {\r\n            const items = await agirar.getSliderCards()\r\n            return (items)\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          onSuccess: (res => {\r\n            res.forEach((value, id) => {\r\n                queryCache.setQueryData(['sliderCards', id], value)\r\n              })\r\n          }),\r\n        }\r\n      })\r\n}\r\n\r\nexport const useGetHistory = ()=>{\r\n    const agirar = Container.get(AgirarRepository)\r\n    return useQuery({\r\n        queryKey: ['history_cards'],\r\n        queryFn: async () => {\r\n            const items = await agirar.getHistory()\r\n            return (items)\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          onSuccess: (res => {\r\n            res.forEach((value, id) => {\r\n                queryCache.setQueryData(['historyCards', id], value)\r\n              })\r\n          }),\r\n        }\r\n      })\r\n}\r\n\r\nexport const useGetAteliers=()=>{\r\n    const agirar = Container.get(AgirarRepository)\r\n    return useQuery({\r\n        queryKey: ['ateliers_cards'],\r\n        queryFn: async () => {\r\n            const items = await agirar.getAteliers()\r\n            return (items)\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          onSuccess: (res => {\r\n            res.forEach((value, id) => {\r\n                queryCache.setQueryData(['ateliersCards', id], value)\r\n              })\r\n          }),\r\n        }\r\n      })\r\n}\r\n\r\nexport const useGetOrgaosSociais=()=>{\r\n    const agirar = Container.get(AgirarRepository)\r\n    return useQuery({\r\n        queryKey: ['orgaos_sociais'],\r\n        queryFn: async () => {\r\n            const items = await agirar.getOrgaosSociais()\r\n            return (items)\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          onSuccess: (res => {\r\n            res.forEach((value, id) => {\r\n                queryCache.setQueryData(['orgaosSociais', id], value)\r\n              })\r\n          }),\r\n        }\r\n      })\r\n}\r\n\r\nexport const useSubmitAssociate = data => {\r\n    const agirar = Container.get(AgirarRepository)\r\n    return useQuery({\r\n        queryKey: ['submit_associate'],\r\n        queryFn: async () => {\r\n            const response = await agirar.submitAssociateData(data)\r\n            console.log(response)\r\n            return (response)\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n      })\r\n}","import React from 'react'\r\nimport {Typography, CircularProgress } from \"@material-ui/core\"\r\n\r\n const Loading = () => {\r\n    return (\r\n        <div className=\"loadingContainer\">\r\n            <CircularProgress size={100} color=\"secondary\" />\r\n            <Typography className=\"loadingText\">\r\n                A carregar...\r\n            </Typography>\r\n           \r\n        </div>\r\n    )\r\n}\r\nexport default Loading","import React from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport AlertTitle from '@material-ui/lab/AlertTitle'\r\n\r\n const ErrorMessage = (props) => {\r\n    return (\r\n        <div className=\"errorContainer\">\r\n                <Alert variant=\"standard\" severity=\"error\">\r\n                <AlertTitle>{props.title}</AlertTitle>\r\n                <span>{props.msg}</span>\r\n                </Alert>\r\n      </div>\r\n    )\r\n}\r\nexport default ErrorMessage","import React from 'react'\r\nimport {Typography, Paper,TextField, Select, MenuItem,FormControl, InputLabel,FormHelperText,Button} from \"@material-ui/core\"\r\nimport {useSubmitAssociate} from \"../../Domain/UseCases\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport ErrorMessage from \"../../Components/ErrorMessage\"\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { Link } from 'react-router-dom'\r\n\r\n const JoinUs = ()=> {\r\n\r\n    const [formData, setFormData] = React.useState({\r\n        sendData:{\r\n            codPostal: \"\",\r\n            contribuicao: \"\",\r\n            dataNascimento: \"\",\r\n            email: \"\",\r\n            freqPagamento: \"Trimestral\",\r\n            localidade: \"\",\r\n            modoPagamento: \"Transferência bancária\",\r\n            morada: \"\",\r\n            nib: \"\",\r\n            nif: \"\",\r\n            nome: \"\",\r\n            telefone: \"\"\r\n        }, \r\n        error:{\r\n            codPostal:false,\r\n            contribuicao: false,\r\n            dataNascimento: false,\r\n            email: false,\r\n            localidade: false,\r\n            morada: false,\r\n            nib: false,\r\n            nif:false,\r\n            nome: false,\r\n            telefone: false\r\n        },\r\n        validated: false\r\n    })\r\n    const handleSubmit = e=>{\r\n        e.preventDefault()\r\n    }\r\n\r\n    const checkContribuicao = ()=>{\r\n        let error = false\r\n        if(formData.sendData.freqPagamento === \"Trimestral\" && formData.sendData.contribuicao < 6){\r\n            setFormData({\r\n                ...formData, \r\n                error:{\r\n                    ...formData.error, \r\n                    contribuicao: true\r\n                }\r\n            })\r\n            error = true\r\n        }else if(formData.sendData.freqPagamento === \"Semestral\" && formData.sendData.contribuicao< 12){\r\n            setFormData({\r\n                ...formData, \r\n                error:{\r\n                    ...formData.error, \r\n                    contribuicao: true\r\n                }\r\n            })\r\n            error = true\r\n\r\n        }else if(formData.sendData.freqPagamento === \"Anual\" && formData.sendData.contribuicao< 24){\r\n            setFormData({\r\n                ...formData, \r\n                error:{\r\n                    ...formData.error, \r\n                    contribuicao: true\r\n                }\r\n            })\r\n            error = true\r\n        } else {\r\n            setFormData({\r\n                ...formData, \r\n                error:{\r\n                    ...formData.error, \r\n                    contribuicao: false\r\n                }\r\n            })\r\n        }\r\n        return error\r\n    }\r\n\r\n    const handleTextChange = e =>{\r\n        let tempData = formData.sendData\r\n        let error = formData.error\r\n        tempData[e.target.id] = e.target.value\r\n        error[e.target.id] = false\r\n        setFormData({\r\n            ...formData,\r\n            sendData: tempData, \r\n            error\r\n        })\r\n    }\r\n\r\n    const handleSelectChange = e =>{\r\n        let tempData = formData.sendData\r\n        tempData[e.target.name] = e.target.value\r\n        setFormData({\r\n            ...formData, \r\n            sendData: tempData\r\n        })\r\n    }\r\n\r\n    const submitData = ()=>{\r\n        let temp_error = formData.error\r\n        let hasError = false\r\n        Object.keys(formData.sendData).map(id=>{\r\n            if(formData.sendData[id] === \"\" && id !== \"nib\") {\r\n                temp_error[id] = true; \r\n                hasError = true\r\n            }\r\n            setFormData({\r\n                ...formData, error: temp_error\r\n            })\r\n        })\r\n        if(formData.sendData.modoPagamento === \"Débito Direto\" && formData.sendData.nib === \"\" ){\r\n            hasError = true\r\n            setFormData({\r\n                ...formData, \r\n                error:{\r\n                    ...formData.error,\r\n                    nib: true\r\n                }\r\n            })\r\n        }\r\n        if(checkContribuicao()) hasError = true\r\n\r\n\r\n        if(!hasError) setFormData({...formData, validated: true})\r\n    }\r\n\r\n    if(formData.validated) return <FormValidated data={formData.sendData}/>  \r\n\r\n    return (\r\n        <div className=\"joinUsContainer\">\r\n            <Paper className=\"formContainer\" elevation={1}>\r\n            <Typography variant=\"h6\" >FORMULÁRIO DE ASSOCIADO</Typography>\r\n                <form  onSubmit={handleSubmit} >\r\n                    <TextField \r\n                        fullWidth={true}\r\n                        id=\"nome\" \r\n                        label=\"Nome Completo\" \r\n                        onChange={handleTextChange}\r\n                        error={formData.error.nome}\r\n                        />\r\n\r\n                     <TextField \r\n                        fullWidth={true}\r\n                        id=\"email\" \r\n                        label=\"Email\" \r\n                        onChange={handleTextChange}\r\n                        error={formData.error.email}\r\n                        />\r\n\r\n                    <TextField \r\n                        fullWidth={true}\r\n                        id=\"telefone\" \r\n                        type=\"number\"\r\n                        label=\"Número de telefone\" \r\n                        onChange={handleTextChange}\r\n                        error={formData.error.telefone}\r\n                        />\r\n\r\n                    <TextField \r\n                        fullWidth={true}\r\n                        id=\"dataNascimento\" \r\n                        type=\"date\"\r\n                        label=\"Data de nascimento\" \r\n                        onChange={handleTextChange}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        error={formData.error.dataNascimento}\r\n                        />\r\n\r\n                     <TextField \r\n                        fullWidth={true}\r\n                        id=\"morada\" \r\n                        label=\"Morada\" \r\n                        onChange={handleTextChange}\r\n                        error={formData.error.morada}\r\n                        />\r\n\r\n                     <TextField \r\n                        fullWidth={true}\r\n                        id=\"codPostal\" \r\n                        label=\"Código postal\" \r\n                        onChange={handleTextChange}\r\n                        error={formData.error.codPostal}\r\n                        />\r\n                    \r\n                    <TextField \r\n                        fullWidth={true}\r\n                        id=\"localidade\" \r\n                        label=\"Localidade\" \r\n                        onChange={handleTextChange}\r\n                        error={formData.error.localidade}\r\n                        />\r\n                    \r\n                    <TextField \r\n                        fullWidth={true}\r\n                        id=\"nif\" \r\n                        label=\"NIF\" \r\n                        type=\"number\"\r\n                        onChange={handleTextChange}\r\n                        error={formData.error.nif}\r\n                        />\r\n                    \r\n                    <TextField \r\n                        fullWidth={true}\r\n                        id=\"contribuicao\" \r\n                        label=\"Contribuição\" \r\n                        type=\"number\"\r\n                        inputProps={{ min: \"6\"}}\r\n                        onChange={handleTextChange}\r\n                        helperText={`O valor da sua contribuição de ser no mínimo ${\r\n                            formData.sendData.freqPagamento === \"Trimestral\"? \"6€ por trimestre\": \r\n                                formData.sendData.freqPagamento === \"Semestral\"? \"12€ por semestre\": \"24€ por ano\"     \r\n                        }`}\r\n                        error={formData.error.contribuicao}\r\n                        />\r\n                    <FormControl  fullWidth={true} >\r\n                        <InputLabel id=\"freqLabel\">Frequência de pagamento</InputLabel>    \r\n                        <Select\r\n                            labelId=\"freqLabel\"\r\n                            id=\"freqPagamento\"\r\n                            value={formData.sendData.freqPagamento}\r\n                            onChange={handleSelectChange}\r\n                            name=\"freqPagamento\"        \r\n                            >\r\n                            <MenuItem value= \"Trimestral\">Trimestral</MenuItem>\r\n                            <MenuItem value= \"Semestral\">Semestral</MenuItem>\r\n                            <MenuItem value= \"Anual\">Anual</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl  fullWidth={true} >\r\n                        <InputLabel  id=\"modoLabel\" >Modo de pagamento</InputLabel>    \r\n                        <Select\r\n                            labelId=\"modoLabel\"\r\n                            id=\"freqPagamento\"\r\n                            value={formData.sendData.modoPagamento}\r\n                            onChange={handleSelectChange}\r\n                            name=\"modoPagamento\"\r\n                            >\r\n                            <MenuItem value= \"Transferência bancária\">Transferência bancária</MenuItem>\r\n                            <MenuItem value= \"Débito Direto\">Débito Direto</MenuItem>\r\n                        </Select>\r\n                       {formData.sendData.modoPagamento=== \"Transferência bancária\" &&  <FormHelperText color=\"primary\" >\r\n                            Todas as transferências devem ser realizadas para o NIB: 003600519910035196781\r\n                        </FormHelperText>}\r\n                      \r\n                    {formData.sendData.modoPagamento=== \"Débito Direto\" && <TextField \r\n                        fullWidth={true}\r\n                        id=\"nib\" \r\n                        label=\"NIB\" \r\n                        onChange={handleTextChange}\r\n                        helperText=\"Por favor insira o seu NIB para podermos realizar o débito direto.\"\r\n                        error={formData.error.nib}\r\n                        />}\r\n                    </FormControl>\r\n                    <Button onClick={submitData} variant=\"contained\" color=\"primary\">submeter</Button>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FormValidated = data =>{\r\n    const {\r\n        data: response,\r\n        status: submitStatus\r\n    } =  useSubmitAssociate(data)\r\n\r\n\r\n    const isLoading = React.useMemo(() => {\r\n        return submitStatus === 'loading'  \r\n    }, [submitStatus])\r\n    \r\n    if (isLoading) return <Loading />\r\n\r\n    if(response.error) return <ErrorMessage title=\"Erro\" msg=\"Ocurreu um erro na submissão dos seus dados. Por favor tente mais tarde\" />\r\n    return (\r\n        <div className=\"successContainer\" >\r\n            {/* <Typography variant=\"h1\"><EmojiEmotionsIcon/></Typography> */}\r\n            <InsertEmoticonIcon/>\r\n            <Typography variant=\"h3\">MUITO OBRIGADO!</Typography>\r\n            <Typography variant=\"subtitle1\">O seu contributo fará toda a diferença</Typography>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n                <Link to=\"/home\">Página inicial</Link> \r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\nexport default JoinUs"],"sourceRoot":""}